# begin document hlw82k3
0	So	_
1	,	_
2	you	(2)
3	want	_
4	to	_
5	have	_
6	code	(4(3)
7	generating	_
8	code	4)
9	?	_
10	The	(5
11	general	_
12	area	5)
13	is	_
14	called	_
15	meta-programming	(6)
16	,	_
17	the	(7
18	specific	_
19	task	7)
20	is	_
21	code	(7(4)
22	generation	7)
23	.	_
24	There	_
25	are	_
26	approaches	(10
27	in	_
28	code	(7(4)
29	generation	_
30	ranging	_
31	from	_
32	simple	_
33	but	_
34	wrong	10)7)
35	to	_
36	difficult	_
37	but	_
38	less	_
39	wrong	_
40	.	_
41	The	(13
42	simplest	_
43	way	_
44	you	(2)
45	can	_
46	go	_
47	about	_
48	it	(15)13)
49	is	_
50	just	(13
51	string	(16)
52	replacement	13)
53	(	_
54	in	_
55	this	(18
56	context	18)
57	,	_
58	it	(15)
59	's	_
60	often	_
61	called	_
62	"	_
63	interpolation	(20)
64	"	_
65	)	_
66	.	_
67	This	(21
68	approach	21)
69	is	_
70	very	_
71	common	_
72	because	_
73	it	(22)
74	's	_
75	easy	_
76	to	_
77	implement	_
78	.	_
79	The	(23
80	drawbacks	23)
81	are	_
82	:	_
83	nesting	(24)
84	becomes	_
85	very	_
86	complicated	_
87	,	_
88	hard	_
89	to	_
90	generalize	_
91	the	(3
92	code	3)
93	,	_
94	a	(26
95	lot	_
96	of	_
97	errors	26)
98	due	_
99	to	_
100	lax	(27
101	validation	27)
102	.	_
103	Historically	_
104	,	_
105	second	(28
106	best	_
107	thing	28)
108	was	_
109	so	(28
110	-	_
111	called	_
112	F-expressions	28)
113	.	_
114	We	(30)
115	wo	_
116	n't	_
117	dwell	_
118	on	_
119	it	(31)
120	since	_
121	this	(31)
122	is	_
123	virtually	_
124	extinct	_
125	today	(33)
126	.	_
127	Next	_
128	were	_
129	macros	(34)
130	.	_
131	Macros	(34)
132	work	_
133	well	_
134	if	_
135	your	(38(2)
136	programming	(37)
137	language	38)
138	can	_
139	expose	_
140	the	(39
141	structure	_
142	of	_
143	your	(3(2)
144	code	39)3)
145	as	_
146	data	(42)
147	.	_
148	(	_
149	Python	(43)
150	cannot	_
151	really	_
152	)	_
153	.	_
154	There	_
155	are	_
156	all	(44
157	kinds	_
158	of	_
159	macros	(34)44)
160	:	_
161	syntax	(44(44(46)
162	macros	44)
163	,	_
164	symbol	(44(49)
165	-	_
166	level	_
167	macros	44)
168	,	_
169	macros	(44
170	applied	_
171	to	_
172	whole	(52
173	expressions	44)44)52)
174	.	_
175	Especially	(44
176	syntax	(46)
177	macros	44)
178	proved	_
179	to	_
180	be	_
181	dangerous	_
182	/	_
183	inconvenient	_
184	because	_
185	in	_
186	the	(55
187	languages	_
188	which	_
189	have	_
190	those	(44)
191	it	(43)
192	's	_
193	sometimes	_
194	possible	55)
195	to	_
196	break	_
197	unrelated	(3
198	code	3)
199	by	_
200	implementing	_
201	a	(60
202	syntax	(46)
203	macro	60)
204	.	_
205	Then	_
206	,	_
207	people	(61)
208	invented	_
209	hygienic	(62
210	macros	_
211	which	_
212	limited	_
213	the	(63
214	scope	_
215	in	_
216	which	_
217	the	(34
218	macros	34)
219	could	_
220	be	_
221	applied	_
222	,	_
223	and	_
224	syntax	(66(46)
225	case	_
226	to	_
227	replace	_
228	the	(44
229	overreaching	_
230	syntax	(46)
231	macros	62)63)66)44)
232	.	_
233	One	(69
234	thing	_
235	that	_
236	was	_
237	lacking	69)
238	was	_
239	generality	(69)
240	and	_
241	some	_
242	sort	_
243	of	_
244	systematization	_
245	,	_
246	and	_
247	that	(69)
248	's	_
249	how	_
250	meta-parsers	(72)
251	appeared	_
252	,	_
253	i.e.	(73
254	languages	_
255	specifically	_
256	designed	_
257	to	_
258	create	_
259	another	(74
260	languages	73)74)
261	.	_
262	---	_
263	Python	(43
264	since	_
265	its	(77(43)
266	conception	77)
267	and	_
268	to	_
269	the	(79
270	present	_
271	day	43)79)
272	is	_
273	by	_
274	and	_
275	large	_
276	unaware	_
277	and	_
278	unaffected	_
279	by	_
280	the	(80
281	research	_
282	that	_
283	was	_
284	happening	_
285	in	_
286	this	(5
287	field	80)5)
288	.	_
289	It	(43)
290	only	_
291	has	_
292	the	(83
293	most	_
294	crude	_
295	tools	_
296	possible	83)
297	(	_
298	eg.	(83
299	`string	83)
300	.	_
301	Template`	(85)
302	or	_
303	third	(88(87
304	-	_
305	party	87)
306	libraries	_
307	like	_
308	Jinja2	(89)88)
309	)	_
310	.	_
311	Yet	_
312	,	_
313	it	_
314	seems	_
315	,	_
316	like	_
317	nobody	(90)
318	's	_
319	really	_
320	upset	_
321	by	_
322	it	(43)
323	.	_
# end document

